@page "/home/subscription"
@layout NavbarLayout
@inject HttpWrapper Http
@inject NavigationManager NavManager
@using HiddenLove.Client.Components.Subscription

<div class="container sub-clean">
    <div class="image">
            <img src="img/logo.svg" class="illustration"/>
    </div>
    <h2>Choisissez l'abonnement qui vous correspond !</h2>
    <div class="row">
        <div class="col-md-4 col-12">
            <SubscriptionCard Price="19.99d" OfferName="Simple" PrivilegeNeeded="CustomerTier.Basic" PrivilegeActual="@Privilege">
                <ul>
                    <li>Scénarios génériques</li>
                    <li>Agenda des excuses</li>
                    <li>Faux spams</li>
                </ul>
            </SubscriptionCard>
        </div>

        <div class="col-md-4 col-12">
            <SubscriptionCard Price="29.99d" OfferName="Complet" PrivilegeNeeded="CustomerTier.Normal" PrivilegeActual="@Privilege">
                <ul>
                    <li>Tous les avantages de l'offre "Simple"</li>
                    <li>Scénarios personnalisés</li>
                    <li>Chat textuel</li>
                </ul>
            </SubscriptionCard>
        </div>

        <div class="col-md-4 col-12">
            <SubscriptionCard Price="44.99d" OfferName="Pro" PrivilegeNeeded="CustomerTier.Pro" PrivilegeActual="@Privilege">
                <ul>
                    <li>Tous les avantages de l'offre "Complet"</li>
                    <li>Scénarios sur mesure</li>
                    <li>Implication de personnes tiers</li>
                </ul>
            </SubscriptionCard>
        </div>
    </div>
</div>



@code {
    private ContentStatus PageStatus { get; set; } = ContentStatus.Loading;
    private int? Privilege { get; set; }

    protected override async Task OnInitializedAsync()
    {
        PageStatus = ContentStatus.Loading;

        await Http.Authenticate();
        dynamic res = await Http.GetResultAsync<object>("Users/GetCurrentUser");
        Privilege = res.id_Privilege;

        PageStatus = ContentStatus.Ok;
    }

    private bool IsActualSubscription(int? privilegeNeeded)
    {
        return Privilege == privilegeNeeded;
    }

    private async void ChangePrivilege(int? newPrivilege)
    {
        await Http.Client.PutAsJsonAsync("Users/ChangePrivilege", newPrivilege);
        NavManager.NavigateTo("/home", true);
    }
    
}