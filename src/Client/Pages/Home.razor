@page "/home"
@inject HttpWrapper Http
@inject JsHelper Js
@inject NavigationManager NavManager
@layout NavbarLayout

<div class="home-clean">
    <div class="home-form">
        <div class="home-image">
            <img src="img/logo.svg" class="home-illustration" />
        </div>
        @if(Privilege <= (int)CustomerTier.Basic)
        {
            <div class="row">
                <div class="btn-validation">
                    <a href="/scenario/select">
                        <button class="btn btn-primary">
                            <i class="fa fa-plus"></i> Ajouter un scénario
                        </button>
                    </a>
                </div>
            </div>
        }
        <h2>Mes scénarios</h2>
        @if (IsPageLoaded)
        {
            <div class="row">
                <div class="col-12">
                    @if (UsedScenarios.Any())
                    {
                        <table class="table">
                            <thead class="thead-light">
                                <tr>
                                    <th scope="col">Titre</th>
                                    <th scope="col">Date</th>
                                    <th scope="col">Horaires</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (UserScenarioData scenario in UsedScenarios)
                                {
                                    <tr class="@RowColor(scenario.IsFinished, scenario.IsToday)">
                                        <td><a href="/scenario/view/@scenario.Id">@scenario.Title</a></td>
                                        <td>@scenario.EventDate.ToString("dd/MM/yyyy")</td>
                                        <td>
                                            @if(scenario.StartDate.HasValue && scenario.EndDate.HasValue)
                                            {
                                                <p>
                                                    @scenario.StartDate.Value.ToString("HH:mm") ➔ @scenario.EndDate.Value.ToString("HH:mm")
                                                </p>
                                            }
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    }
                    else
                    {
                        <p>Aucun scénario pour le moment. Mais rien n'est jamais trop tard !</p>
                    }
                </div>
            </div>
        }
        else
        {
            <p>Chargement...</p>
        }
    </div>
</div>

@code {
    private List<UserScenarioData> UsedScenarios { get; set; }

    private bool IsPageLoaded { get; set; } = false;

    private int Privilege { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await Http.Authenticate(Js, NavManager);
        UsedScenarios = await Http.GetResultAsync<List<UserScenarioData>>("ScenarioView/UserList");

        UsedScenarios ??= new List<UserScenarioData>();
        UsedScenarios = UsedScenarios.OrderByDescending(x => x.EventDate).ToList();
        IsPageLoaded = true;

        dynamic res = await Http.GetResultAsync<object>("Users/GetCurrentUser");
        Privilege = res.id_Privilege;
    }

    private string RowColor(bool isFinished, bool isToday)
    {
        if (isToday)
            return "bg-light";

        if (isFinished)
            return "text-secondary";

        return "";
    }
}