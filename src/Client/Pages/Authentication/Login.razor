@page "/login"
@using HiddenLove.Shared.Models.Authentication
@inject HttpHelper Http
@inject CookieHelper Cookie
@inject NavigationManager NavManager

<h1>Login</h1>

<div class="row">
    <div class="col-3">
        <input class="form-control" type="text" id="emailAddressInput" placeholder="Email Address" @bind="EmailAddressBinding" />
    </div>
    <div class="col-3">
        <input class="form-control" type="text" id="passwordInput" placeholder="Password" @bind="PasswordBinding" />
    </div>
    <div class="col-3">
        <input class="form-control" type="checkbox" id="passwordInput" placeholder="Password" @bind="KeepConnectionAlive" />
    </div>
    <div class="col-3">
        <button class="btn btn-primary full-width" @onclick="LogUser">Submit</button>
    </div>
</div>

@code {
    private AuthenticationResponse LoginResponse;

    private string EmailAddressBinding;
    private string PasswordBinding;
    private bool KeepConnectionAlive;

    private string CookieTokenValue;

    protected override void OnInitialized()
    {
        EmailAddressBinding = "";
        PasswordBinding = "";
        KeepConnectionAlive = false;
        LoginResponse = new AuthenticationResponse();
    }

    private async void LogUser()
    {
        var request = new AuthenticationRequest 
        { 
            EmailAddress = EmailAddressBinding,
            Password = PasswordBinding
        };

        LoginResponse = await Http.PostAsync<AuthenticationRequest, AuthenticationResponse>("Users/authenticate", request);

        Http.AddAuthorizationHeader(LoginResponse.Token);
        
        if(KeepConnectionAlive)
        {
            Cookie.WriteCookie("token", LoginResponse.Token, 60 * 60 * 24 * 7);
        }

        NavManager.NavigateTo("/");
    }
}