@page "/admin/scenario-creation"
@using HiddenLove.Shared.Models.ScenarioCreation
@inject HttpWrapper Http
@inject JsHelper Js
@inject NavigationManager NavManager

<div class="container">
    @foreach (var step in Steps.Select((e, i) => new { Step = e, Index = i }))
    {
        <div class="row">
            <div class="col-3">
                <SelectList Items="AvailableSteps" @bind-BindingValue="Steps[step.Index].StepIdAsString" />
            </div>
            <div class="col-3">
                <Timebox @bind-BindingValue="Steps[step.Index].StartTime" />
            </div>
            <div class="col-3">
                <Timebox @bind-BindingValue="Steps[step.Index].EndTime" />
            </div>
            <div class="col-3">
                <i class="fas fa-minus-circle" @onclick="@(x => RemoveStep(step.Index))"></i>
            </div>
        </div>
    }
    <div class="row">
        <div class="col-10"></div>
        <div class="col-2">
            <i class="fas fa-plus-circle" @onclick="AddStep"></i>
        </div>
    </div>
    <div class="row">
        <button class="btn btn-primary" @onclick="SubmitScenario">J'ai Termin√© !</button>
    </div>
</div>

@code {
    private List<KeyValuePair<string, string>> AvailableSteps = new List<KeyValuePair<string, string>>();
    private List<ScenarioCreationStep> Steps = new List<ScenarioCreationStep>();

    protected override async Task OnInitializedAsync()
    {
        AvailableSteps = await Http.GetResultAsync<List<KeyValuePair<string, string>>>("ScenarioCreation/Steps");
        Console.WriteLine("App is ready to use");
    }

    protected void AddStep()
    {
        var newElement = new ScenarioCreationStep {
            StepIdAsString = AvailableSteps.First().Key,
            StartTime = null,
            EndTime = null
        };

        if(Steps.Count() > 0) 
            newElement.StartTime = Steps[Steps.Count()-1].EndTime;

        Steps.Add(newElement);
    }
    
    protected void RemoveStep(int index)
    {
        Steps.RemoveAt(index);
    }

    protected void SubmitScenario()
    {
        Js.Log(Steps);
    }
}